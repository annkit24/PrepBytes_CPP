
//Ankit Surwade

// C++ implementation to check if 
// characters of a given string can 
// be rearranged to form a palindrome 
#include<bits/stdc++.h> 
using namespace std; 
#define NO_OF_CHARS 256 

/* function to check whether characters of a string can form 
a palindrome */
int canFormPalindrome(string str) 
{ 
	// Create a count array and initialize all 
	// values as 0 
	int count[NO_OF_CHARS] = {0}; 

	// For each character in input strings, 
	// increment count in the corresponding 
	// count array 
	for (int i = 0; str[i]; i++) 
		count[str[i]]++; 

	// Count odd occurring characters 
	int odd = 0; 
	for (int i = 0; i < NO_OF_CHARS; i++) 
	{ 
		if (count[i] & 1) 
			odd++; 

		if (odd > 1) 
			return 0; 
	} 

	// Return true if odd count is 0 or 1, 
	return 1; 
} 

/* Driver program*/
int main() 
{
  int t;
  cin>>t;
  while(t--){
   int n,c=0;
   cin>>n;
   while(n--){
  string s;
  cin>>s;
   
c+=canFormPalindrome(s);
   }
   cout<<c<<endl;
  }
return 0; 
} 
